# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy-ubuntu-latest:
    name: Build wheels on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.19.1
      env:
        CIBW_BEFORE_BUILD_LINUX: >
          if [ ! -f "./run-check" ]; then
            yum -y update;
            yum install -y pkgconfig;
            yum -y install cmake3;
            echo "BUILD ASSIMP";
            git clone https://github.com/assimp/assimp.git;
            cd assimp;
            mkdir build
            cd build
            cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF;
            make -j4;
            make install;
            cd ../..;
            echo "BUILD GLM";
            git clone https://github.com/g-truc/glm.git;
            cd glm;
            cmake \
                -DGLM_BUILD_TESTS=OFF \
                -DBUILD_SHARED_LIBS=OFF \
                -B build .;
            cmake --build build -- all;
            cmake --build build -- install;
            cd ..;
            echo "BUILD SDL";
            git clone https://github.com/libsdl-org/SDL.git --branch release-2.30.4;
            cd SDL;
            mkdir build;
            cd build;
            cmake .. -DCMAKE_BUILD_TYPE=Release;
            cmake --build . --config Release --parallel;
            cmake --install . --config Release;
            cd ../..;
            touch "./run-check";
          fi
        CIBW_ENVIRONMENT: PKG_CONFIG_PATH="/usr/lib64/pkgconfig:/usr/local/lib64/pkgconfig:/project/assimp"
        CIBW_ENVIRONMENT_PASS_LINUX: PKG_CONFIG_PATH PKG_CONFIG
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
